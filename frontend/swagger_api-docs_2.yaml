swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.1.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions for the current month grouped by account
      description: Retrieve all transactions for the current month, grouped by account
      parameters:
        - in: query
          name: month
          required: true
          type: string
          format: date
          description: The month to retrieve transactions for, in the format YYYY-MM
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionGroupedByAccount'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get details of a specific transaction
      description: Retrieve detailed information about a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to retrieve
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update information of a specific transaction
      description: Update details of a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to update
          type: string
        - in: body
          name: body
          description: Updated transaction information
          required: true
          schema:
            $ref: '#/definitions/TransactionInfo'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction information updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID
      accountId:
        type: string
        description: Account ID
      date:
        type: string
        format: date
        description: Date of the transaction
      amount:
        type: number
        format: double
        description: Amount of the transaction
      type:
        type: string
        description: Type of the transaction (e.g., debit, credit)
      description:
        type: string
        description: Description of the transaction
  TransactionInfo:
    type: object
    properties:
      amount:
        type: number
        format: double
        description: Amount of the transaction
      type:
        type: string
        description: Type of the transaction (e.g., debit, credit)
      description:
        type: string
        description: Description of the transaction
  TransactionGroupedByAccount:
    type: object
    properties:
      accountId:
        type: string
        description: Account ID
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

#Explication des nouvelles routes API mises à jour

   # /transactions:
  #      GET: Récupérer toutes les transactions pour le mois en cours, groupées par compte. Un paramètre de requête month (format YYYY-MM) est requis pour spécifier le mois.

#    /transactions/{transactionId}:
 #       GET: Récupérer les détails d'une transaction spécifique.
#        PUT: Mettre à jour les informations d'une transaction spécifique.

# Notes importantes
#
 #   Suppression des transactions: Comme indiqué, les transactions ne seront pas supprimées, mais seulement les informations peuvent être mises à jour ou supprimées.
 #   Ajout de transactions: L'ajout de transactions n'est pas prévu dans cette phase, seulement l'ajout d'informations sur les transactions existantes via des mises à jour.

# Ce fichier swagger-2.yaml devrait maintenant répondre à toutes les exigences pour la gestion des transactions dans la phase 2 du projet