swagger: '2.0'
info:
  title: Bank Argent API documentation  # Titre de la documentation de l'API
  description: Contains all available API endpoints in this codebase  # Description de la documentation
  version: '2.1.0'  # Version de l'API
  termsOfService: 'http://swagger.io/terms/'  # URL des termes de service
host: localhost:3001  # Hôte où l'API est hébergée
basePath: /api/v1  # Chemin de base pour toutes les routes de l'API
schemes:
  - http  # Schéma de communication utilisé (HTTP)
paths:
  /user/login:
    post:
      tags:
        - User Module  # Tag pour catégoriser ce point de terminaison
      summary: Login  # Résumé de ce que fait le point de terminaison
      description: API for Login  # Description détaillée
      parameters:
        - in: body
          name: body
          description: Login Payload  # Description du paramètre attendu
          required: true  # Indique que ce paramètre est obligatoire
          schema:
            $ref: '#/definitions/Login'  # Référence à la définition Login
      produces:
        - application/json  # Format de la réponse produit
      responses:
        '200':
          description: Login Successfully  # Description de la réponse pour le code 200
          schema:
            $ref: '#/definitions/LoginResponse'  # Référence à la définition LoginResponse
        '400':
          description: Invalid Fields  # Description de la réponse pour le code 400
        '500':
          description: Internal Server Error  # Description de la réponse pour le code 500

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []  # Sécurité, nécessite un jeton Bearer
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions for the current month grouped by account
      description: Retrieve all transactions for the current month, grouped by account
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionGroupedByAccount'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get details of a specific transaction
      description: Retrieve detailed information about a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to retrieve
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

  /transactions/category/{category}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transactions by category
      description: Retrieve transactions information by category
      parameters:
        - in: path
          name: category
          required: true
          description: Category of the transactions to retrieve
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '404':
          description: Transactions not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update information of a specific transaction
      description: Update details of a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to update
          type: string
        - in: body
          name: body
          description: Updated transaction information
          required: true
          schema:
            $ref: '#/definitions/TransactionInfo'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction information updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: user email  # Email de l'utilisateur
      password:
        type: string
        description: user password  # Mot de passe de l'utilisateur
      firstName:
        type: string
        description: user first name  # Prénom de l'utilisateur
      lastName:
        type: string
        description: user last name  # Nom de famille de l'utilisateur
      userName:
        type: string
        description: user public name  # Nom public de l'utilisateur

  Login:
    type: object
    properties:
      email:
        type: string
        description: user email  # Email pour la connexion
      password:
        type: string
        description: user password  # Mot de passe pour la connexion

  ApiResponse:
    type: object
    properties:
      status:
        type: integer  # Code de statut de la réponse
      message:
        type: string  # Message de la réponse
      body:
        type: object
        properties:
          id:
            type: string  # Identifiant de l'objet dans la réponse
          email:
            type: string  # Email de l'objet dans la réponse

  LoginResponse:
    type: object
    properties:
      token:
        type: string  # Jeton d'authentification après la connexion

  UserProfile:
    type: object
    properties:
      userName:
        type: string  # Nom public de l'utilisateur pour le profil

  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID  # Identifiant de la transaction
      accountId:
        type: string
        description: Account ID  # Identifiant du compte associé à la transaction
      date:
        type: string
        format: date
        description: Date of the transaction  # Date de la transaction
      amount:
        type: number
        format: double
        description: Amount of the transaction  # Montant de la transaction
      balance:
        type: number
        description: Balance of the account after the transaction  # Solde du compte après la transaction
      transactionType:
        type: string
        description: Type of the transaction (e.g., debit, credit)  # Type de la transaction (débit, crédit)
      description:
        type: string
        description: Description of the transaction  # Description de la transaction
      note:
        type: string
        description: Note about the transaction  # Note sur la transaction
      category:
        type: string
        description: Category of the transaction  # Catégorie de la transaction

  TransactionInfo:
    type: object
    properties:
      amount:
        type: number
        format: double
        description: Amount of the transaction  # Montant de la transaction
      transactionType:
        type: string
        description: Type of the transaction (e.g., debit, credit)  # Type de la transaction (débit, crédit)
      description:
        type: string
        description: Description of the transaction  # Description de la transaction
      note:
        type: string
        description: Note about the transaction  # Note sur la transaction
      category:
        type: string
        description: Category of the transaction  # Catégorie de la transaction

  TransactionGroupedByAccount:
    type: object
    properties:
      accountId:
        type: string
        description: Account ID  # Identifiant du compte
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'  # Liste des transactions associées au compte

  CategoryInfo:
    type: object
    properties:
      name:
        type: string
        description: Name of the category  # Nom de la catégorie
      description:
        type: string
        description: Description of the category  # Description de la catégorie
      note:
        type: string
        description: Note about the category  # Note sur la catégorie

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header  # Le jeton Bearer est transmis dans l'en-tête HTTP
