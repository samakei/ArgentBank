swagger: '2.0'
info:
  title: Bank Argent API documentation  # Titre de la documentation de l'API
  description: Contains all available API endpoints in this codebase  # Description de la documentation
  version: '2.1.0'  # Version de l'API
  termsOfService: 'http://swagger.io/terms/'  # URL des termes de service
host: localhost:3001  # Hôte où l'API est hébergée
basePath: /api/v1  # Chemin de base pour toutes les routes de l'API
schemes:
  - http  # Schéma de communication utilisé (HTTP)
paths:
  /user/login:
    post:
      tags:
        - User Module  # Tag pour catégoriser ce point de terminaison
      summary: Login  # Résumé de ce que fait le point de terminaison
      description: API for Login  # Description détaillée
      parameters:
        - in: body
          name: body
          description: Login Payload  # Description du paramètre attendu
          required: true  # Indique que ce paramètre est obligatoire
          schema:
            $ref: '#/definitions/Login'  # Référence à la définition Login
      produces:
        - application/json  # Format de la réponse produit
      responses:
        '200':
          description: Login Successfully  # Description de la réponse pour le code 200
          schema:
            $ref: '#/definitions/LoginResponse'  # Référence à la définition LoginResponse
        '400':
          description: Invalid Fields  # Description de la réponse pour le code 400
        '500':
          description: Internal Server Error  # Description de la réponse pour le code 500

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []  # Sécurité, nécessite un jeton Bearer
      tags:
        - User Module
      summary: Fetch User Profile  # Récupérer le profil de l'utilisateur
      description: API for fetching a user profile  # API pour récupérer un profil utilisateur
      responses:
        '200':
          description: User profile retrieved successfully  # Profil utilisateur récupéré avec succès
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields  # Champs invalides
        '500':
          description: Internal Server Error  # Erreur serveur interne
    put:
      security:
        - Bearer: []  # Sécurité, nécessite un jeton Bearer
      tags:
        - User Module
      summary: Update User Profile  # Mettre à jour le profil de l'utilisateur
      description: API for updating a user profile  # API pour mettre à jour un profil utilisateur
      parameters:
        - in: body
          name: body
          description: Update user profile attributes  # Mettre à jour les attributs du profil utilisateur
          required: true
          schema:
            $ref: '#/definitions/UserProfile'  # Référence à la définition UserProfile
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully  # Profil utilisateur mis à jour avec succès
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields  # Champs invalides
        '500':
          description: Internal Server Error  # Erreur serveur interne

  /transactions:
    get:
      security:
        - Bearer: []  # Sécurité, nécessite un jeton Bearer
      tags:
        - Transactions Module
      summary: Get all transactions for the current month grouped by account  # Obtenir toutes les transactions du mois en cours groupées par compte
      description: Retrieve all transactions for the current month, grouped by account  # Récupérer toutes les transactions du mois en cours, groupées par compte
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully  # Transactions récupérées avec succès
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionGroupedByAccount'  # Référence à la définition TransactionGroupedByAccount
        '400':
          description: Invalid Fields  # Champs invalides
        '500':
          description: Internal Server Error  # Erreur serveur interne

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []  # Sécurité, nécessite un jeton Bearer
      tags:
        - Transactions Module
      summary: Get details of a specific transaction  # Obtenir les détails d'une transaction spécifique
      description: Retrieve detailed information about a specific transaction  # Récupérer des informations détaillées sur une transaction spécifique
      parameters:
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to retrieve  # ID de la transaction à récupérer
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully  # Détails de la transaction récupérés avec succès
          schema:
            $ref: '#/definitions/TransactionDetails'  # Référence à la définition TransactionDetails
        '400':
          description: Invalid Fields  # Champs invalides
        '404':
          description: Transaction not found  # Transaction non trouvée
        '500':
          description: Internal Server Error  # Erreur serveur interne

  /transactions/category/{category}:
    get:
      security:
        - Bearer: []  # Sécurité, nécessite un jeton Bearer
      tags:
        - Transactions Module
      summary: Get transactions by category  # Obtenir les transactions par catégorie
      description: Retrieve transactions information by category  # Récupérer les informations des transactions par catégorie
      parameters:
        - in: path
          name: category
          required: true
          description: Category of the transactions to retrieve  # Catégorie des transactions à récupérer
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully  # Transactions récupérées avec succès
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'  # Référence à la définition Transaction
        '400':
          description: Invalid Fields  # Champs invalides
        '404':
          description: Transactions not found  # Transactions non trouvées
        '500':
          description: Internal Server Error  # Erreur serveur interne
    put:
      security:
        - Bearer: []  # Sécurité, nécessite un jeton Bearer
      tags:
        - Transactions Module
      summary: Update transaction by category  # Mettre à jour la transaction par catégorie
      description: Update details of a specific transaction  # Mettre à jour les détails d'une transaction spécifique
      parameters:
        - in: path
          name: category
          required: true
          description: Category of the transaction to update  # Catégorie de la transaction à mettre à jour
          type: string
        - in: body
          name: body
          description: Updated transaction information  # Informations mises à jour sur la transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionInfo'  # Référence à la définition TransactionInfo
      produces:
        - application/json
      responses:
        '200':
          description: Transaction information updated successfully  # Informations de la transaction mises à jour avec succès
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields  # Champs invalides
        '404':
          description: Transaction not found  # Transaction non trouvée
        '500':
          description: Internal Server Error  # Erreur serveur interne

definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: User email  # Email de l'utilisateur
      password:
        type: string
        description: User password  # Mot de passe de l'utilisateur
      firstName:
        type: string
        description: User first name  # Prénom de l'utilisateur
      lastName:
        type: string
        description: User last name  # Nom de famille de l'utilisateur
      userName:
        type: string
        description: User public name  # Nom public de l'utilisateur

  Login:
    type: object
    properties:
      email:
        type: string
        description: User email  # Email pour la connexion
      password:
        type: string
        description: User password  # Mot de passe pour la connexion

  ApiResponse:
    type: object
    properties:
      status:
        type: integer  # Code de statut de la réponse
      message:
        type: string  # Message de la réponse
      body:
        type: object
        properties:
          id:
            type: string  # Identifiant de l'objet dans la réponse
          email:
            type: string  # Email de l'objet dans la réponse
          accountId:
            type: string
          date:
            type: string
            format: date
          description:
            type: string
          amount:
            type: number
          balance:
            type: number
          transactionType:
            type: string
          category:
            type: string
          note:
            type: string  

  LoginResponse:
    type: object
    properties:
      token:
        type: string  # Jeton d'authentification après la connexion

  UserProfile:
    type: object
    properties:
      userName:
        type: string  # Nom public de l'utilisateur pour le profil

  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID  # Identifiant de la transaction
      accountId:
        type: string
        description: Account ID  # Identifiant du compte associé à la transaction
      date:
        type: string
        format: date
        description: Date of the transaction  # Date de la transaction
      description:
        type: string
        description: Description of the transaction  # Description de la transaction
      amount:
        type: number
        format: double
        description: Amount of the transaction  # Montant de la transaction
      balance:
        type: number
        description: Balance of the account after the transaction  # Solde du compte après la transaction
      
  TransactionDetails:  # Définition des détails de la transaction
    type: object
    properties:
      accountId:
        type: string
        description: ID of the account associated with the transaction  # ID du compte associé à la transaction
      date:
        type: string
        format: date
        description: Date of the transaction  # Date de la transaction
      description:
        type: string
        description: Description of the transaction  # Description de la transaction
      amount:
        type: number
        description: Amount of the transaction  # Montant de la transaction
      balance:
        type: number
        description: Balance of the account after the transaction  # Solde du compte après la transaction
      transactionType:
        type: string
        description: Type of the transaction (e.g., debit, credit)  # Type de la transaction (débit, crédit)
      category:
        type: string
        description: Category of the transaction  # Catégorie de la transaction
      note:
        type: string
        description: Note about the transaction  # Note sur la transaction

  TransactionInfo: #updated
    type: object
    properties:
      category:
        type: string
        description: Category of the transaction  # Catégorie de la transaction
      note:
        type: string
        description: Note about the transaction  # Note sur la transaction
      description:
        type: string
        description: Description of the transaction  # Description de la transaction
      transactionType:
        type: string
        description: Type of the transaction (e.g., debit, credit)  # Type de la transaction (débit, crédit)

  TransactionGroupedByAccount:
    type: object
    properties:
      accountId:
        type: string
        description: Account ID  # Identifiant du compte
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'  # Liste des transactions associées au compte

  CategoryInfo:  # Définition des informations sur la catégorie
    type: object
    properties:
      name:
        type: string
        description: Name of the category  # Nom de la catégorie
      description:
        type: string
        description: Description of the category  # Description de la catégorie
      transactionType:
        type: string
        description: Type of the transaction (e.g., debit, credit)  # Type de la transaction (débit, crédit)
      category:
        type: string
        description: Category of the transaction  # Catégorie de la transaction
      note:
        type: string
        description: Note about the category  # Note sur la catégorie
      

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header  # Le jeton Bearer est transmis dans l'en-tête HTTP
